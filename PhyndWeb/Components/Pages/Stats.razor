@page "/Stats"

<div class="container mt-3">
    <nav class="breadcrumb">
        <a class="breadcrumb-item" href="/">phÿnd</a>
        <span class="breadcrumb-item active">stats</span>
    </nav>
    <div class="card-deck">
        <div class="card mb-4">
            <div class="card-body">
                <div class="statcircle bg-primary">
                    <div class="statcontent align-middle">
                        <div class="text-white number">@completedGames</div>
                        <div class="statico">
                            <i class="mdi mdi-flag"></i>
                        </div>
                    </div>
                </div>
                <p class="card-text text-center">phÿnd has played @completedGames games</p>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <div class="statcircle bg-secondary">
                    <div class="statcontent align-middle">
                        <div class="text-white number">@wonGames</div>
                        <div class="statico">
                            <i class="mdi mdi-trophy-variant"></i>
                        </div>
                    </div>
                </div>
                <p class="card-text text-center">phÿnd has won @wonGames games and lost @lostGames</p>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <div class="statcircle bg-success">
                    <div class="statcontent align-middle">
                        <div class="text-white number">@moveCount</div>
                        <div class="statico">
                            <i class="mdi mdi-arrow-expand-all"></i>
                        </div>
                    </div>
                </div>
                <p class="card-text text-center">phÿnd has made @moveCount moves</p>
            </div>
        </div>
    </div>
    <div class="card-deck">
        <div class="card mb-4">
            <div class="card-body">
                <div class="statcircle bg-info">
                    <div class="statcontent align-middle">
                        <div class="text-white number">@movesPerGame.ToString("0.00")</div>
                        <div class="statico">
                            <i class="mdi mdi-chess-rook"></i>
                        </div>
                    </div>
                </div>
                <p class="card-text text-center">The average game lasts for @movesPerGame.ToString("0.00") moves.</p>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <div class="statcircle bg-dark">
                    <div class="statcontent align-middle">
                        <div class="text-white number">@uniqueScenarios</div>
                        <div class="statico">
                            <i class="mdi mdi-binoculars"></i>
                        </div>
                    </div>
                </div>
                <p class="card-text text-center">
                    phÿnd has encountered @uniqueScenarios unique scenarios and made adjustments to its likelihood to respond
                    with @modifiedOutcomes different responses for those states.
                </p>
            </div>
        </div>
    </div>
</div>

@inject PhyndWeb.Services.StatsService service;
@functions{
    int completedGames = 0;
    int wonGames = 0;
    int lostGames = 0;
    int moveCount = 0;
    float movesPerGame = 0;
    int uniqueScenarios = 0;
    int modifiedOutcomes = 0;

    async Task LoadStats()
    {
        completedGames = await service.GetCompletedGames();
        wonGames = await service.GetWonGames();
        lostGames = await service.GetLostGames();
        moveCount = await service.GetMoveCount();
        movesPerGame = await service.GetMovesPerGame();
        uniqueScenarios = await service.GetUniqueScenarios();
        modifiedOutcomes = await service.GetModifiedOutcomes();
    }

    protected override async Task OnInitAsync()
    {
        await LoadStats();
    }
}